#include <stdint.h>
#include <vector>
#include <algorithm>    // std::random_shuffle
#include <ctime>        // std::time
#include <cstdlib>      // std::rand, std::srand

#ifndef DECK_H
#define DECK_H

const uint32_t DECK_SIZE = 52;

const uint32_t NUM_SUITS = 4;
const uint32_t NUM_RANKS = 14;

const uint32_t SPADE    = 0;
const uint32_t CLUB     = 1;
const uint32_t DIAMONDS = 2;
const uint32_t HEARTS   = 3;

const uint32_t ACE_LOW  = 0;
const uint32_t ONE      = 1;
const uint32_t TWO      = 2;
const uint32_t THREE    = 3;
const uint32_t FOUR     = 4;
const uint32_t FIVE     = 5;
const uint32_t SIX      = 6;
const uint32_t SEVEN    = 7;
const uint32_t EIGHT    = 8;
const uint32_t NINE     = 9;
const uint32_t TEN      = 10;
const uint32_t JACK     = 11;
const uint32_t QUEEN    = 12;
const uint32_t KIND     = 13;
const uint32_t ACE_HIGH = 14;

class Card
{
public:
  uint32_t suit;
  uint32_t rank;

  // default constructor
  Card(uint32_t suit, uint32_t rank)
  {
    Card::suit = suit;
    Card::rank = rank;
  }
  
};


class Deck
{
public:
  std::vector<Card> deck;

  // default constructor
  Deck(bool shuffle)
  {
    for(uint32_t rank = 0; rank < NUM_RANKS; rank++)
    {
      for(uint32_t suit = 0; suit < NUM_SUITS; suit++)
      {
	deck.push_back(Card(suit, rank));
      }
    }
    if(shuffle)
    {
	
    }
  }
};

#endif /* DECK_H */
